{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","phonebook","axios","get","then","response","data","newObject","post","id","delete","concat","put","PersonForm","_ref","newName","newNumber","addNewPerson","handleNameChange","handleNumberChange","react_default","a","createElement","onSubmit","value","onChange","type","Filter","_ref2","filterName","handleFilterNameChange","Person","_ref3","person","handleClick","name","number","App_Button","text","onClick","Button","_ref4","Persons","_ref5","persons","map","App_Person","key","Notification","_ref6","notification","message","className","error","App","_useState","useState","_useState2","Object","slicedToArray","setNewName","_useState3","_useState4","setNewNumber","_useState5","_useState6","setFilterName","_useState7","_useState8","setPersons","_useState9","_useState10","setNotification","useEffect","console","log","phonebookService","initialPersons","filteredPersonsArray","filter","toLowerCase","includes","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","length","window","confirm","registeredPerson","find","updatedRegisteredPerson","objectSpread","returnedPerson","setTimeout","catch","App_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c5d172df.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteID = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteID, update } \r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport phonebookService from './services/phonebook'\r\n\r\nconst PersonForm = ({ newName, newNumber, addNewPerson, handleNameChange, handleNumberChange }) => {\r\n  return (\r\n    <form onSubmit={addNewPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Filter = ({filterName, handleFilterNameChange}) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filterName} onChange={handleFilterNameChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Person = ({ person, handleClick }) => (\r\n  <div>\r\n    <span> {person.name} {person.number} </span>\r\n    <Button text=\"delete\" onClick={() => handleClick(person.id, person.name)}/>\r\n  </div>\r\n)\r\n\r\nconst Button = ({text, onClick}) => {\r\n  return (\r\n  <button onClick={onClick}>{text}</button>\r\n  )\r\n}\r\n\r\n\r\nconst Persons = ({persons, handleClick}) => {\r\n  const personsList = persons.map(person => <Person key={person.id} person={person} handleClick={handleClick}/>)\r\n  return (\r\n    personsList\r\n  )\r\n}\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification.message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.error ? \"notification error\" : \"notification success\"}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterName, setFilterName ] = useState('')\r\n  const [ persons, setPersons ] = useState([])\r\n  const [notification, setNotification] = useState({\r\n    message: null, \r\n    error: false\r\n  })\r\n\r\n  // ONLY RUNS ONCE \r\n  useEffect(() => {\r\n    console.log('effect')\r\n    phonebookService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  },[])\r\n\r\n  console.log('rendered App')\r\n\r\n  const addNewPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const userExists = (persons.filter(a => a.name === newName)).length > 0\r\n    if (userExists) {\r\n      const isUserUpdate = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one ?`)\r\n      if (isUserUpdate) {\r\n      const registeredPerson = persons.find(person => person.name === newName)\r\n      const updatedRegisteredPerson = { ...registeredPerson, number: newNumber }\r\n      phonebookService\r\n        .update(registeredPerson.id, updatedRegisteredPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(person => person.id !== returnedPerson.id ? person : updatedRegisteredPerson))\r\n          setNotification({ message: `Changed number of ${returnedPerson.name}`, error: false })\r\n\r\n          setTimeout(() => {\r\n            setNotification({ message: null, error: false })\r\n          }, 3000)\r\n        })\r\n        .catch(error => {\r\n          setNotification({ message: error.response.data.error, error: true })\r\n      \r\n          setTimeout(() => {\r\n            setNotification({ message: null, error: false })\r\n          }, 3000)\r\n\r\n      })\r\n      }\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      phonebookService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNotification({ message: `Added ${returnedPerson.name}`, error: false })\r\n\r\n          setTimeout(() => {\r\n            setNotification({ message: null, error: false })\r\n          }, 3000)\r\n        })\r\n        .catch(error => {\r\n          setNotification({ message: error.response.data.error, error: true })\r\n\r\n          setTimeout(() => {\r\n            setNotification({ message: null, error: false })\r\n          }, 3000)\r\n        })\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')  \r\n  }\r\n  \r\n  const handleNameChange= (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterNameChange = (event) => {\r\n    setFilterName(event.target.value.toLowerCase())\r\n  }\r\n  \r\n  const handleClick = (id, name) => {\r\n    if (window.confirm(`Delete ${name} ?`)) {\r\n      phonebookService\r\n        .deleteID(id)\r\n        .then(() => {\r\n          console.log('hit here? ')\r\n          setPersons(persons.filter(person => id !== person.id))\r\n          setNotification({ message: `Deleted ${name}`, error: false })\r\n\r\n          setTimeout(() => {\r\n            setNotification({ message: null, error: false })\r\n          }, 3000)\r\n        })\r\n        .catch(() => {\r\n          setNotification({ message: `Information of ${name} has already been removed from server`, error: true })\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n\r\n    } else {console.log('no state update')}\r\n  }\r\n\r\n  const filteredPersonsArray = persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook : most updated deploy to heroku</h2>\r\n\r\n      <Notification notification={notification} />\r\n\r\n      <Filter filterName={filterName} handleFilterNameChange={handleFilterNameChange} />\r\n      \r\n      <h3>add a new</h3>\r\n\r\n      <PersonForm newName={newName} newNumber={newNumber} addNewPerson={addNewPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\r\n      \r\n      <h3>Numbers</h3>\r\n\r\n      <Persons persons={filteredPersonsArray} handleClick={handleClick} />\r\n\r\n      <br /><br /><div>debug: newName state is : {newName}</div>\r\n      <div>debug: newNumber state is : {newNumber}</div>\r\n      <div>debug: filterName state is : {filterName}</div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}