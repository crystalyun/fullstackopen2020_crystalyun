{"version":3,"sources":["../../practice/src/components/Note.js","../../practice/src/services/notes.js","../../practice/src/App.js","../../practice/src/index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","App_Notification","map","i","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.57898d77.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n  ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note \r\n\r\n  ","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request =  axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000, \r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>boobooNote app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => (n.id === id))\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n      setNotes(notes.map(note => (note.id !== id ) ? note: returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n=> ( n.id !== id )))\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n    \r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>      \r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note \r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}